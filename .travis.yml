language: c
os: linux
dist: focal
virt: vm
addons:
  apt:
    packages:
      - zstd
      - binutils-dev
      - elfutils
      - libpcap-dev
      - libelf-dev
      - gcc-multilib
      - pkg-config
      - wireshark
      - tshark
      - bpfcc-tools
      - python3
      - python3-pip
      - python3-setuptools
      - qemu-kvm
      - rpm2cpio
      - libdw-dev
      - libdwarf-dev

  coverity_scan:
    project:
      name: "xdp-project/xdp-tools"
      description: "Tools for using XDP"
    notification_email: toke@redhat.com
    build_command_prepend: "make clean"
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
  - echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get -qq update
  - sudo apt-get -qq -y install clang-10 lld-10 llvm-10

before_script:
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

_selftest_template: &selftest_template
    install: make
    before_script:
      - .travis/prepare_test_tools.sh
      - .travis/prepare_test_kernel.sh
    script:
      - .travis/run_tests_in_vm.sh

jobs:
  include:
    - stage: Selftests
      name: Selftests using 5.11.0 kernel
      env:
        - KERNEL_VERSION=5.11.0
        - KERNEL_PATCH_VERSION=156.fc34
      <<: *selftest_template
    - name: Selftests using 5.6.19 kernel
      env:
        - KERNEL_VERSION=5.6.19
        - KERNEL_PATCH_VERSION=300.fc32
      <<: *selftest_template

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "NHEO85Pjbpylq/4VatviQnU1QOGmEwdac5ncvW2Rem1wFZpm1pGsUFnP+gkYqyZrk1iu0ioEllkVkOksuElk3ozrFJbM9/dxf9wo8I8Z+CPc9NCFtYIpCpWpAXhASAF+jgOYmd51zj5F4W9O4DZ2jB6480ytXQFfTkl2gR7tK7/oCSjhdjJ7ECRb+HTCT2ZZr5WCvV3Ul47MKNIgTZ7zm89lIHDL6ERXe+63Gr0wIyvNLafJBTLW8ce5edXTPoh4lH7+Y0tGoLFol5CIxK+PKqpf6aYtCoKa+rNdvK47t9SgGmL/J7UwjdPGfk6aVVfqW1qZVFHXKQAAYmDy87XjKJIVhY+/NxHBn7fl1x2onfAXvnWOqPJrLTtrFuaQOxWKaLJucU8InYf5u9KK+B5MaosR0MTslyc29aIOrUPG1qe3eROqHVNTbUj841WIccXZB/ydFa3tZ0mLf//g93/tf6jouBbKUjwyUpSDyYJOfrXtNiC7fMONr9VBLsSdrLUQmWU9lXkGvz2iKkp2rl3QUbMqQ+uXHMWFy+NLZWvN3BQearalcfirY6eh0X4LRcZgmHZWwL7T3raF4jIn+/7xvYcYVLq8vWbyKYrlhNjcHpQeltKuq8kcCEa7IKCEInWI2rSWhLQhbb9DMlVC/MvJuQ67LipqJD4HmSRWBqONWdA="
    - CLANG=clang-10
    - LLC=llc-10
    - VERBOSE=1
